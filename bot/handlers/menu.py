from telebot.types import KeyboardButton, ReplyKeyboardMarkup, CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton
from telebot import TeleBot

from ..utils.timezone import get_moscow_now, format_moscow_time
from ..models import UserProfile
from bot import SettingsStates
from .ai import OpenAIAPI

start_markup = InlineKeyboardMarkup()
start_markup.add(InlineKeyboardButton(text='–ù–∞ —Ç—ã', callback_data='o.ty'))
start_markup.add(InlineKeyboardButton(text='–ù–∞ –í—ã', callback_data='o.vy'))

main_markup = ReplyKeyboardMarkup(resize_keyboard=True)
main_markup.add(KeyboardButton(text='üìù –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ'))
main_markup.add(KeyboardButton(text='üìã –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è'))

def cmd_start(message: Message, bot: TeleBot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    bot.set_state(message.from_user.id, SettingsStates.addressing, message.chat.id)
    return bot.send_message(
        chat_id=message.chat.id,
        text=f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.\n\n"
        f"–î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º, –∫–∞–∫ –º–Ω–µ –ª—É—á—à–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?\n\n",
        reply_markup=start_markup,
        parse_mode="Markdown"
    ) 


def selected_addressing(call: CallbackQuery, bot: TeleBot):
    addressings = {
        'ty': '—Ç—ã',
        'vy': '–≤—ã',
    }
    addressing = call.data.split('.')[-1]
    try:
        communication_markup = InlineKeyboardMarkup()
        communication_markup.add(InlineKeyboardButton(text='üíº –î–µ–ª–æ–≤–æ–π', callback_data=f'f.{addressing}|business'))
        communication_markup.add(InlineKeyboardButton(text='ü§ù –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π', callback_data=f'f.{addressing}|friendly'))
        communication_markup.add(InlineKeyboardButton(text='üë• –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π', callback_data=f'f.{addressing}|neutral'))
        communication_markup.add(InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data=f'f.return'))
        bot.set_state(call.from_user.id, SettingsStates.tone, call.message.chat.id)
        bot.add_data(call.from_user.id, call.message.chat.id, addressing=addressing)
        return bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f'–û—Ç–ª–∏—á–Ω–æ! –Ø –±—É–¥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –Ω–∞ {addressing}.\n\n'
            f'–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–Ω –æ–±—â–µ–Ω–∏—è:',
            reply_markup=communication_markup
        )
    except Exception as e:
        print(e)
        bot.send_message(
            chat_id=call.message.chat.id,
            text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞'
        )
        start_markup.add(InlineKeyboardButton(text='‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data=f'f.skip'))
        return bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.\n\n"
            f"–î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º, –∫–∞–∫ –º–Ω–µ –ª—É—á—à–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?\n\n",
            reply_markup=start_markup,
            parse_mode="Markdown"
        ) 


def selected_tone(call: CallbackQuery, bot: TeleBot):
    data = call.data.split('.')[-1]
    bot.answer_callback_query(callback_query_id=call.id)
    if data == 'return':
        return bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.\n\n"
            f"–î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º, –∫–∞–∫ –º–Ω–µ –ª—É—á—à–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?\n\n",
            reply_markup=start_markup,
            parse_mode="Markdown"
        ) 
    elif data == 'skip':
        current_time = format_moscow_time(get_moscow_now(), "%d.%m.%Y %H:%M")
        return bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.\n\n"
            f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–ú–°–ö): {current_time}\n\n"
            f"–¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é –º–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n\n"
            f"üìÖ **–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã:**\n"
            f"‚Ä¢ '–∑–∞–≤—Ç—Ä–∞ –≤ 8:30 –≤—ã–ø–∏—Ç—å –≤–∏—Ç–∞–º–∏–Ω—ã'\n"
            f"‚Ä¢ '–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –≤ 14:00 –≤—Å—Ç—Ä–µ—á–∞'\n\n"
            f"üìÜ **–î–Ω–∏ –Ω–µ–¥–µ–ª–∏:**\n"
            f"‚Ä¢ '–≤ —Å—É–±–±–æ—Ç—É –≤ 10:00 —É–±–æ—Ä–∫–∞'\n"
            f"‚Ä¢ '–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 9:00 —Ä–∞–±–æ—Ç–∞'\n\n"
            f"üîÑ **–¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:**\n"
            f"‚Ä¢ '–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 22:00 –≤–∏—Ç–∞–º–∏–Ω—ã'\n"
            f"‚Ä¢ '–∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 8:00 —Å–ø–æ—Ä—Ç'\n"
            f"‚Ä¢ '–∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –∑–∞—Ä—è–¥–∫–∞'\n"
            f"‚Ä¢ '–∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—Ä–æ–≥—É–ª–∫–∞'\n\n"
            f"‚è∞ **–û–±—ã—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**\n"
            f"‚Ä¢ '—á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ —Å–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É'\n"
            f"‚Ä¢ '–≤ 15:30 –ø–æ–∑–≤–æ–Ω–∏—Ç—å –º–∞–º–µ'",
            reply_markup=main_markup,
            parse_mode="Markdown"
        ) 
    else:
        addressing, tone = data.split('|')
        bot.add_data(call.from_user.id, call.message.chat.id, tone=tone)
        bot.set_state(call.from_user.id, SettingsStates.timezone)
        return bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text='–û—Ç–ª–∏—á–Ω–æ!\n\n' 
            '–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —Ñ–æ—Ä–º–∞—Ç—É: +0 –∏–ª–∏ -0 –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ UTC',
            reply_markup=None
        )


def final_sets(message: Message, bot: TeleBot):
    if message.text.startswith('+') or message.text.startswith('-') and len(message.text) <= 3:
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            bot.delete_state(message.from_user.id, message.chat.id)
            try:
                print(UserProfile.objects.filter(user_id=message.from_user.id).count)
            except Exception as e:
                print('–û–®–ò–ë–ö–ê: ', e)
            try:
                us = UserProfile.objects.update_or_create(
                    defaults={
                    'username': message.from_user.username,
                    'addressing': data['addressing'],
                    'tone': data['tone'],
                    'timezone': message.text
                    },
                    user_id=message.from_user.id,
                )
            except Exception as e:
                print('–û–®–ò–ë–ö–ê:', e)

            return bot.send_message(
                chat_id=message.chat.id,
                text=f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.\n\n"
                f"–¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é –º–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n\n"
                f"üìÖ **–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã:**\n"
                f"‚Ä¢ '–∑–∞–≤—Ç—Ä–∞ –≤ 8:30 –≤—ã–ø–∏—Ç—å –≤–∏—Ç–∞–º–∏–Ω—ã'\n"
                f"‚Ä¢ '–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –≤ 14:00 –≤—Å—Ç—Ä–µ—á–∞'\n\n"
                f"üìÜ **–î–Ω–∏ –Ω–µ–¥–µ–ª–∏:**\n"
                f"‚Ä¢ '–≤ —Å—É–±–±–æ—Ç—É –≤ 10:00 —É–±–æ—Ä–∫–∞'\n"
                f"‚Ä¢ '–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 9:00 —Ä–∞–±–æ—Ç–∞'\n\n"
                f"üîÑ **–¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:**\n"
                f"‚Ä¢ '–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 22:00 –≤–∏—Ç–∞–º–∏–Ω—ã'\n"
                f"‚Ä¢ '–∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 8:00 —Å–ø–æ—Ä—Ç'\n"
                f"‚Ä¢ '–∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –∑–∞—Ä—è–¥–∫–∞'\n"
                f"‚Ä¢ '–∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—Ä–æ–≥—É–ª–∫–∞'\n\n"
                f"‚è∞ **–û–±—ã—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**\n"
                f"‚Ä¢ '—á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ —Å–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É'\n"
                f"‚Ä¢ '–≤ 15:30 –ø–æ–∑–≤–æ–Ω–∏—Ç—å –º–∞–º–µ'",
                reply_markup=main_markup,
                parse_mode="Markdown"
            ) 
    else:
        return bot.send_message(
            chat_id=message.chat.id,
            text='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å'
        )